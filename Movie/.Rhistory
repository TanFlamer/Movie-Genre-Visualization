source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
10^(0:7)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_func()
View(test)
data.frame(test, t(sapply(test$list, unlist))) # List to columns
data.frame(test$list, t(sapply(test$list, unlist))) # List to columns
sapply(test$list, unlist)
t(sapply(test$list, unlist))
t(sapply(column, unlist))
t(sapply(test$list, unlist))
data.frame(t(sapply(test$list, unlist)))
addNA(cut(Movies$rating, breaks = seq(0, 10, 2)))
levels(addNA(cut(Movies$rating, breaks = seq(0, 10, 2))))
length(addNA(cut(Movies$rating, breaks = seq(0, 10, 2))))
length(levels(addNA(cut(Movies$rating, breaks = seq(0, 10, 2)))))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
as.integer("test")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_votes()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_votes()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_votes()
View(test)
View(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
get_runtime()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- get_decade()
View(test)
data.frame(levels(decade))
data.frame(levels(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE)))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- get_decade()
View(test)
test[["interval"]]
test[["rating_original"]]
test["rating_original"]
test[["genre_order"]][["X1"]]
test["genre_original"][1]
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
View(Genre_1)
View(test)
data.frame(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- get_decade()
View(test)
data.frame(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
test <- get_decade()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- get_decade()
View(test)
list_to_frame(test$genre_original)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test_certificate()
View(test)
View(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
test <- get_decade()
View(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- get_decade()
View(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- get_decade()
View(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- get_decade()
View(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test <- test_certificate()
View(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_ratings()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_ratings()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre()
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
c(2,7)
c(2:7)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
sum(Movies)
sum(Movies)
nrow(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_genre(1)
View(Genre_1)
test <- compare_genre(3)
View(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_decade()
View(test)
list_to_frame(test$rating_order)
test[["genre1"]][2]
read.table("Genre_1")
?get
get("Genre_1")
temp <- combn(GenreList, 1, simplify = FALSE)
temp <- combn(GenreList, 2, simplify = FALSE)
View(temp)
paste(temp)
test <- paste(temp)
test <- lapply(temp, paste)
View(test)
View(temp)
test <- lapply(temp, toString)
test
levels(addNA(cut(Movies$runtime, breaks = c(seq(0, 240, 30), Inf))))
Movies$certificate
factor(Movies$certificate)
sum(Movies$certificate == "")
sum(Movies$certificate == "Not Rated")
sum(Movies$certificate == "Unrated")
system.time(sum(row == "" || row == "Not Rated" || row == "Unrated"))
system.time(sum(Movies$certificate == "" || Movies$certificate == "Not Rated" || Movies$certificate == "Unrated"))
system.time(sum(Movies$certificate == "" | Movies$certificate == "Not Rated" | Movies$certificate == "Unrated"))
system.time(sum(Movies$certificate %in% c("", "Unrated", "Not Rated")))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
assign_certificates(Movies$certificate)
lapply(Movies$certificate, assign_certificates)
test <- lapply(Movies$certificate, assign_certificates)
levels(test)
factor(test)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Movies)
table(Movies$certificate)
table(Movies$year)
factor(Movies$certificate)
levels(Movies$certificate)
levels(data.frame(Movies$certificate, stringsAsFactors = TRUE))
as.factor(Movies$certificate)
View(Movies)
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Movies)
typeof(Movies$certificate)
typeof(lapply(Movies$certificate, assign_certificates))
typeof(sapply(Movies$certificate, assign_certificates))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Movies)
levels(Movies$certificate)
table(Movies$certificate)
as.factor(Movies$certificate)
levels(as.factor(Movies$certificate))
cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE)
addNA(cut(Movies$runtime, breaks = c(seq(0, 240, 30), Inf)))
addNA(cut(Movies$votes, breaks = 10^(0:7)))
as.factor(Movies$certificate)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
levels(as.factor(Movies$certificate))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
get_certificate()
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
View(get_certificate)
View(get_certificate)
View(get_decade)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
get_certificates(filter_genre("Adventure"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
process_runtime(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
process_certificate(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
process_certificate(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
process_certificate(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
as.factor(filtered_movies$certificate)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
process_certificate(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
factor(Movies$certificate, levels(Movies$certificate))
levels <- levels(as.factor(Movies$certificate))
factor(Movies$certificate, levels)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
process_certificate(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
df <- data.frame(fun = 1:3)
df$fun <- c(mean, sd, function(x) x^2)
View(df)
df[1]
df[[1]]
df[[1]][1]
View(df)
df[[1]][3](2)
df[[1]][3]
df[[1]][3]2
df[[1]][3] 2
df[[1]][3] (2)
(df[[1]][3])
(df[[1]][3]) (2)
df[[1]][3]
eval(df[[1]][3])
sapply(c(1, 2), mean)
sapply(c(1, 2), df[[1]][3])
typeof(fun)
typeof(df[[1]][3])
myFunc <- function(x) { print(x) }
# convert the function to text
funcAsText <- deparse(myFunc)
# convert the text back to a function
newMyFunc <- eval(parse(text=funcAsText))
# now you can use the function newMyFunc exactly like myFunc
newMyFunc("foo")
typeof(funcAsText)
eval(parse(funcAsText))
eval(parse(text = funcAsText))
eval(get_decade())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE)
typeof(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
test <- cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE)
lapply(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE), sum)
lapply(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE), levels)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list(6, 16, 10, 8, 13, 11)[1]
list(6, 16, 10, 8, 13, 11)[[1]]
list(6, 16, 10, 8, 13, 11)[[2]]
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
test_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
test_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
compare_data(addNA(cut(Movies$votes, breaks = 10^(0:7))))
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
combn(GenreList, 1, simplify = FALSE)
combn(GenreList, 2, simplify = FALSE)
combn(GenreList, 2, simplify = FALSE)[2]
sapply(combn(GenreList, 1, simplify = FALSE), count_combination)
t(sapply(combn(GenreList, 1, simplify = FALSE), count_combination))
rm(funcAsText)
rm(test)
rm(df)
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
levels <- levels(as.factor(Movies$certificate))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
nrow(combn(GenreList, 1, simplify = FALSE))
length(combn(GenreList, 1, simplify = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
lapply(GenreList, toString)
t(lapply(GenreList, toString))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
do.call(rbind.data.frame, lapply(GenreList, toString))
unlist(GenreList)
as.list(unlist(GenreList))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre(1)
unlist(lapply(GenreList, toString))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_genre()
compare_genre(2)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(cut(filtered_movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
compare_data(cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
compare_data(addNA(cut(Movies$votes, breaks = 10^(0:7))))
test <- compare_genre(3)
View(test)
combn(GenreList, 2, simplify = FALSE)
combn(GenreList, 2, simplify = FALSE)[[2]]
combn(GenreList, 1, simplify = FALSE)[2]
length(combn(GenreList, 1, simplify = FALSE))
combn(GenreList, 0, simplify = FALSE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
test_data(TRUE, x = 1)
test_data(genre = TRUE, x = 1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
test_data(TRUE, x = 1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
test_data(TRUE, x = 1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
test_data(TRUE, x = 1)
test_data(FALSE, factors = cut(Movies$year, breaks = c(-Inf, seq(1910, 2030, 10)), right = FALSE))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
View(test)
list_to_frame(test$genre)
data.frame(test[, 1:2], list_to_frame(test$genre))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions_2.R", echo=TRUE)
compare_data(TRUE, 1)
addNA(seq(0, 10, 2))
levels(addNA(seq(0, 10, 2)))
get("Movies")
View(test)
list_to_frame(test$rating)
Movies[,"genre1"]
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "original")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
test <- compare_data(FALSE, factors = addNA(cut(Movies$votes, breaks = 10^(0:7))))
View(test)
list_to_table("test", "rating", "column")
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
votes <- levels(addNA(cut(filtered_movies$votes, breaks = 10^(0:7))))
votes <- levels(addNA(cut(Movies$votes, breaks = 10^(0:7))))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "order")
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
View(test)
ratings <- levels(addNA(cut(filtered_movies$rating, breaks = seq(0, 10, 2))))
ratings <- levels(addNA(cut(Movies$rating, breaks = seq(0, 10, 2))))
ratings[1]
ratings[4]
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
c(1:6)
2 * c(1:6) - 1
2 * c(1:6)
2 * 1:6
c(2 * 1:ncol(matrix) - 1, 2 * 1:ncol(matrix))
2 * 1:ncol(matrix) - 1
2 * 1:ncol(matrix)
2 * 1:6 - 1
c(2 * 1:6 - 1, 2 * 1:6)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
order(2 * 1:6 - 1, 2 * 1:6)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
matrix(1:12, nrow = 2, ncol = 6)
matrix(1:12, nrow = 6, ncol = 2)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
matrix(1:12, nrow = 6, ncol = 2)
vector(matrix(1:12, nrow = 6, ncol = 2))
as.vector(matrix(1:12, nrow = 6, ncol = 2))
c(matrix(1:12, nrow = 6, ncol = 2))
c(matrix(1:12, nrow = 2, ncol = 6))
c(t(matrix(1:12, nrow = 2, ncol = 6)))
c(t(matrix(1:12, nrow = 6, ncol = 2)))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "row")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
list_to_table("test", "rating", "order")
