source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/test.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/test.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/test.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/test.R", echo=TRUE)
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/test.R", echo=TRUE)
rm(list = ls())
cat("\014")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
View(Movies)
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
View(Movies)
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Movies)
count(Movies[is.na(Movies$runtime),])
runApp('example.R')
runApp('example.R')
runApp('example.R')
runApp('example.R')
runApp('example.R')
runApp('example.R')
runApp('example.R')
runApp('example.R')
runApp('example.R')
runApp('example.R')
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
library(shiny); runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
runApp('example.R')
runApp('example.R')
runApp('example.R')
table(Movies$certificate)
grepl("Black", Movies$movie_name, fixed=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/alternate.R", echo=TRUE)
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Movies)
runApp('example.R')
# Genre list
GenreList <- c(" ")
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
runApp('example.R')
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
library(shiny); runApp('example.R')
print(c(NA, NA))
print(data.frame(NA, NA))
print(data.frame(NA, NA, NA))
print(data.frame(c(NA, NA)))
print(data.frame(NA, NA))
colnames(data.frame(NA, NA))
print(data.frame())
print(data.frame(matrix(ncol = 3, nrow = 0)))
print(data.frame(matrix(ncol = 2, nrow = 0)))
data.frame(matrix(ncol = 2, nrow = 0))
data.frame(matrix(ncol = 2))
data.frame(matrix(ncol = 2, nrow = 0))
colnames(data.frame(ncol = 2, nrow = 0))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
View(Movies)
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
rm(list = ls())
cat("\014")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
runApp('example.R')
read.table("archive.zip")
unzip("archive.zip")
files <- unzip("archive.zip")
unzip("archive.zip", list=
TRUE)
unzip("archive.zip", list = TRUE)$Name
Action <- read.csv(unzip("archive.zip", "action.csv"))
combn(letters[1:4], 2)
combn(letters[1:4], 3)
combn(files, 2)
combn(files, 3)
unzip("archive.zip", list = TRUE)$Name
View(Movies)
gsub("scifi", "sci-fi", "scifi")
gsub("scifi", "sci-fi", "test")
rm(list = ls())
cat("\014")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
GenreList
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
combn(GenreList, 1)
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(`2-Genre`)
View(`3-Genre`)
View(`1-Genre`)
2-Genre <- t(2-Genre)
2-Genre
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre1)
View(Genre2)
View(Genre2)
Genre2[[1]][2]
Genre2[[1]]
Genre2[[2]]
View(Genre2)
combn(GenreList, 1)
t(combn(GenreList, 1))
t(combn(GenreList, 1, simplify = FALSE))
combn(GenreList, 1, simplify = FALSE)
combn(GenreList, 2, simplify = FALSE)
test <- combn(GenreList, 1, simplify = FALSE)
t(combn(GenreList, 1, simplify = FALSE))
test <- combn(GenreList, 2, simplify = FALSE)
test[[1]]
test[[1]][2]
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre2)
Genre2[[8]]
file.remove("action.csv")
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Movies)
sum(is.na(Movies$runtime))
sum(is.na(Movies$rating))
sum(is.na(Movies$votes))
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
Genre1
data.frame(Genre1)
t(Genre1)
data.frame(t(Genre1))
View(Movies)
combn(GenreList, 1)
data.frame(combn(GenreList, 1))
data.frame(t(combn(GenreList, 1)))
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(1Genre)
View(1Genre)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(`Genre-1`)
View(`Genre-2`)
View(`Genre-3`)
for (y in 1:1) colnames(Genre-1)[y] <- paste("genre", y, sep = "")
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
Genre_1
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
for (y in 1:2) print(y)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
View(Genre_2)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
View(Genre_2)
count(Movies$year)
sum(Movies$year)
count(Movies$year < 2000)
sum(Movies$year < 2000)
Movies$year < 2000
View(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
sum(filter_genre(Genre_1$genre1))
filter_genre(Genre_1$genre1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
test(Genre1$genre1)
test(Genre_1$genre1)
sum(test(Genre_1$genre1))
View(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
sum(test(Genre_1$genre1))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
combn(GenreList, 1)
t(combn(GenreList, 1))
lapply(t(combn(GenreList, 1)), "length<-", 3)
strsplit(Movies$genre, ", ")
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
demo <- combn(GenreList, 1, simplify = FALSE)
data.frame(demo)
data.frame(t(demo))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
data.frame(demo)
combn(GenreList, 1)
t(combn(GenreList, 1)
)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
matrix(nrow = nrow(temp), ncol = 0)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
matrix(nrow = 16, ncol = 0)
nrow(temp)
length(temp)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(genre3)
rm(list = ls())
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
apply(Genre_1, 1, )
apply(Genre_1, 1, sum(filter_movie))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
apply(Genre_1, 1, sum(filter_movie))
apply(Genre_1, 1, filter_movie)
apply(Genre_1, 1, filter_movie, genre1, genre2, genre3)
View(Genre_1)
apply(Genre_1, 1, filter_movie, genre1, genre2, genre3)
apply(Genre_1, 1, filter_movie, genre1, genre2, genre1)
apply(Genre_1, 1, filter_movie, function(genre1, genre2, genre3))
apply(Genre_1, 1, filter_movie, function(genre1, genre2, genre3) filter_movie(genre1, genre2, genre3))
apply(Genre_1, 1, filter_movie, function(x) filter_movie(x[1], x[2], x[3]))
mapply(filter_movie, genre1, genre2, genre3)
mapply(filter_movie, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
mapply(filter_movie, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
View(Movies)
sum(mapply(filter_movie, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3))
count <- mapply(filter_movie, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
View(count)
View(Genre_1)
View(Genre_2)
count <- mapply(filter_movie, Genre_2$genre1, Genre_2$genre2, Genre_2$genre3)
count <- mapply(filter_movie, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
sum(count$Action)
sum(count)
apply(count, 2, sum)
GenreList
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
count <- mapply(filter_movie, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
apply(count, 2, sum)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
count_combination("All", "All", "All")
mapply(count_combination, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
count <- mapply(count_combination, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
count[1]
count[2]
mapply(count_combination, Genre_2$genre1, Genre_2$genre2, Genre_2$genre3)
seq(1, 10)
c(1, 2, 3)
length(count)
names(count) <- seq(1, length(count))
count[2]
View(Genre_1)
count
mapply(count_combination, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
Genre_1$count <- sapply(count, "[[", 1)
View(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_3)
library(shiny); runApp('example.R')
View(Genre_2)
View(Genre_3)
ncol(Genre_1)
filter_genre <- function(genre){
if(genre == "All")
return (rep(c(TRUE), times = nrow(Movies)))
else{
return (Movies$genre1 == genre |
(!is.na(Movies$genre2) & Movies$genre2 == genre) |
(!is.na(Movies$genre3) & Movies$genre3 == genre))
}
}
count_combination(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
count_combination(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
count_combination(Genre_1)
mapply(count_combination, Genre_1)
Genre_1[1]
Genre[[1]][1]
Genre_1[[1]][1]
apply(Genre_1, 1, count_combination)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
apply(Genre_1, 1, count_combination)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
apply(Genre_1, 1, count_combination)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
apply(Genre_1, 1, count_combination)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
apply(Genre_1, 1, count_combination)
apply(Genre_1, 1, count_combination_old)
mapply(count_combination_old, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
demo <- mapply(count_combination_old, Genre_1$genre1, Genre_1$genre2, Genre_1$genre3)
demo <- apply(Genre_1, 1, count_combination)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
View(Genre_1)
View(Genre_2)
View(Genre_3)
View(Genre_3)
View(Genre_2)
View(Movies)
max(Movies$year)
min(Movies$year)
sum(Movies$year < 1900)
sum(Movies$year > 2020)
sum(Movies$year >= 2010 & Movies$year < 2020)
table(Movies$year)
View(Movies)
seq(1900, 2020, 10)
seq(1910, 2010, 10)
c(-Inf)
c(-Inf, seq(1910, 2010, 10), Inf)
typeof(Inf)
typeof(c(-Inf, seq(1910, 2010, 10), Inf))
typeof(seq(1910, 2010, 10))
year <- seq(1910, 2010, 10)
year <- c(-Inf, seq(1910, 2010, 10), Inf)
year
decade <- cut(Movies, breaks = year)
decade <- cut(Movies$year, breaks = year)
View(decade)
decade
decade$12
as.integer(decade) == 1
count(as.integer(decade) == 1)
sum(as.integer(decade) == 1)
sum(as.integer(decade) == 12)
sum(as.integer(decade) == 13)
10^(0:10)
tens <- 10^(0:10)
tens[1]
tens[2]
tens[3]
cut(c(2010, 2020), breaks = year)
cut(c(NA, 2020), breaks = year)
min(Movies$votes)
count(is.na(Movies$votes))
sum(is.na(Movies$votes))
sum(is.na(Movies$runtime))
table(Movies$runtime)
sum(Movies$runtime > 120)
sum(Movies$runtime > 120, na.rm = TRUE)
sum(Movies$runtime > 150, na.rm = TRUE)
sum(Movies$runtime > 180, na.rm = TRUE)
as.integer(NA)
as.integer(NA) == 1
is.na(NA)
table(Movies$certificate)
sum(is.na(Movies$certificate))
table(Movies$rating)
seq(0, 10)
rep(0, 10)
table(decade)
levels(decade)
year <- seq(1900, 2030, 10)
year <- seq(1890, 2030, 10) # 15 breaks
decade <- cut(Movies$year, breaks = year) # Partition into buckets
table(decade)
sum(as.integer(decade) == 1) # 1 - 12
sum(as.integer(decade) == 2) # 1 - 12
sum(as.integer(decade) == 14) # 1 - 12
sum(decade == 1) # 1 - 12
sum(decade == 2) # 1 - 12
NA == 1
sum(NA)
sum(c(NA, 1))
sum(1)
count(1)
Movies[Movies$genre1 == "",]
Movies[Movies$genre2 == "",]
sum(Movies[Movies$genre2 == "",])
count(Movies[Movies$genre2 == "",])
Movies$genre2 == ""
sum(Movies$genre2 == "")
Movies$genre2 == "Action"
sum(Movies$genre2 == "Action")
sum(Movies$genre2 == "Action", na.rm = TRUE)
c(-Inf, seq(1910, 2030, 10))
year <- c(-Inf, seq(1910, 2030, 10)) # 15 breaks
decade <- cut(Movies$year, breaks = year) # Partition into buckets
table(decade)
decade <- cut(Movies$year, breaks = year, right = FALSE) # Partition into buckets
sum(as.integer(decade) == 1)
View(Movies)
ratings <- seq(0, 10)
View(Movies)
cut(Movies$year, breaks = year, right = FALSE)
table(cut(Movies$year, breaks = year, right = FALSE))
list(cut(Movies$year, breaks = year, right = FALSE))
sum(cut(Movies$year, breaks = year, right = FALSE))
list(table(cut(Movies$year, breaks = year, right = FALSE)))
aggregate(Movies, decade$)
decade
list(decade)
length(cut(Movies$year, breaks = year, right = FALSE))
table(cut(Movies$year, breaks = year, right = FALSE))
demo <- table(cut(Movies$year, breaks = year, right = FALSE))
demo
rm(demo)
levels(cut(Movies$year, breaks = year, right = FALSE))
demo <- levels(cut(Movies$year, breaks = year, right = FALSE))
aggregate(decade, demo, length)
list(demo)
aggregate(decade, list(demo), length)
aggregate(Movies, list(demo), length)
list(decade)
cut(filtered_movies$rating, breaks = seq(0, 10))
cut(Movies$year, breaks = year, right = FALSE)
table(decade)
demo <- table(decade)
demo
ratings
list(demo)
as.data.frame(table(decade))
demo <- as.data.frame(table(decade))
View(demo)
data.frame(table(decade))
demo$decade <- year[2:]
demo$decade <- year[2:14]
demo$decade <- year[2:14] - 10
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
sum(Movies)
nrow(Movies)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
typeof(get_ratings(filter_genre("Action")))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
typeof(get_ratings(filter_genre("Action")))
round(1.234, 2)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
typeof(get_ratings(filter_genre("Action")))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_ratings(filter_genre("Action"))
View(Genre_1)
library(shiny); runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/coursework.R", echo=TRUE)
runApp('example.R')
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_genres(filter_genre("Action"))
sum(filter_genre("War"))
sum(filter_genre("Adventure"))
sum(filter_genre("Animation"))
source("C:/Users/zxtan/Downloads/Compressed/R_Project/Movie/functions.R", echo=TRUE)
get_genres(filter_genre("Action"))
filter_genre("Action")
sum(filter_genre("Action"))
sum(filter_genre("Adventure"))
